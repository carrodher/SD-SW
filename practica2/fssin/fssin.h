/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _FSSIN_H_RPCGEN
#define _FSSIN_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif

#define BUF_SIZE 1024
#define MAX_PATH 256

typedef struct {
	u_int BUF_len;
	char *BUF_val;
} BUF;

struct LEER_result {
	int cod_error;
	BUF datos;
};
typedef struct LEER_result LEER_result;

struct leer_2_argument {
	char *nom;
	int offs;
	int nbytes;
};
typedef struct leer_2_argument leer_2_argument;

struct escribir_2_argument {
	char *nom;
	int offs;
	int nbytes;
	BUF buf;
};
typedef struct escribir_2_argument escribir_2_argument;

#define FSSIN 999999992
#define SIN 2

#if defined(__STDC__) || defined(__cplusplus)
#define leer 1
extern  LEER_result * leer_2(char *, int , int , CLIENT *);
extern  LEER_result * leer_2_svc(char *, int , int , struct svc_req *);
#define escribir 2
extern  int * escribir_2(char *, int , int , BUF , CLIENT *);
extern  int * escribir_2_svc(char *, int , int , BUF , struct svc_req *);
extern int fssin_2_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define leer 1
extern  LEER_result * leer_2();
extern  LEER_result * leer_2_svc();
#define escribir 2
extern  int * escribir_2();
extern  int * escribir_2_svc();
extern int fssin_2_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_BUF (XDR *, BUF*);
extern  bool_t xdr_LEER_result (XDR *, LEER_result*);
extern  bool_t xdr_leer_2_argument (XDR *, leer_2_argument*);
extern  bool_t xdr_escribir_2_argument (XDR *, escribir_2_argument*);

#else /* K&R C */
extern bool_t xdr_BUF ();
extern bool_t xdr_LEER_result ();
extern bool_t xdr_leer_2_argument ();
extern bool_t xdr_escribir_2_argument ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_FSSIN_H_RPCGEN */
