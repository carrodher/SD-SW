/*
* Please do not edit this file.
* It was generated using rpcgen.
*/

#ifndef _FSCON_H_RPCGEN
#define _FSCON_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
	#endif

	#define BUF_SIZE 1024
	#define MAX_PATH 256

	typedef struct {
		u_int BUF_len;
		char *BUF_val;
		} BUF;

		struct LEER_result {
			int cod_error;
			BUF datos;
		};
		typedef struct LEER_result LEER_result;

		struct leer_1_argument {
			int fd;
			int nbytes;
		};
		typedef struct leer_1_argument leer_1_argument;

		struct escribir_1_argument {
			int fd;
			int nbytes;
			BUF buf;
		};
		typedef struct escribir_1_argument escribir_1_argument;

		#define FSCON 999999991
		#define CON 1

		#if defined(__STDC__) || defined(__cplusplus)
		#define leer 1
		extern  LEER_result * leer_1(int , int , CLIENT *);
		extern  LEER_result * leer_1_svc(int , int , struct svc_req *);
		#define escribir 2
		extern  int * escribir_1(int , int , BUF , CLIENT *);
		extern  int * escribir_1_svc(int , int , BUF , struct svc_req *);
		#define abrir 3
		extern  int * abrir_1(char *, CLIENT *);
		extern  int * abrir_1_svc(char *, struct svc_req *);
		#define cerrar 4
		extern  int * cerrar_1(int , CLIENT *);
		extern  int * cerrar_1_svc(int , struct svc_req *);
		extern int fscon_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

		#else /* K&R C */
		#define leer 1
		extern  LEER_result * leer_1();
		extern  LEER_result * leer_1_svc();
		#define escribir 2
		extern  int * escribir_1();
		extern  int * escribir_1_svc();
		#define abrir 3
		extern  int * abrir_1();
		extern  int * abrir_1_svc();
		#define cerrar 4
		extern  int * cerrar_1();
		extern  int * cerrar_1_svc();
		extern int fscon_1_freeresult ();
		#endif /* K&R C */

		/* the xdr functions */

		#if defined(__STDC__) || defined(__cplusplus)
		extern  bool_t xdr_BUF (XDR *, BUF*);
		extern  bool_t xdr_LEER_result (XDR *, LEER_result*);
		extern  bool_t xdr_leer_1_argument (XDR *, leer_1_argument*);
		extern  bool_t xdr_escribir_1_argument (XDR *, escribir_1_argument*);

		#else /* K&R C */
		extern bool_t xdr_BUF ();
		extern bool_t xdr_LEER_result ();
		extern bool_t xdr_leer_1_argument ();
		extern bool_t xdr_escribir_1_argument ();

		#endif /* K&R C */

		#ifdef __cplusplus
	}
	#endif

	#endif /* !_FSCON_H_RPCGEN */
